{
  "_args": [
    [
      {
        "raw": "nwmatcher@https://registry.npmjs.org/nwmatcher/-/nwmatcher-1.3.6.tgz",
        "scope": null,
        "escapedName": "nwmatcher",
        "name": "nwmatcher",
        "rawSpec": "https://registry.npmjs.org/nwmatcher/-/nwmatcher-1.3.6.tgz",
        "spec": "https://registry.npmjs.org/nwmatcher/-/nwmatcher-1.3.6.tgz",
        "type": "remote"
      },
      "/Users/guanliyuan/Library/Caches/CocoaPods/Pods/Release/React/0.13.0-rc-954f9"
    ]
  ],
  "_from": "nwmatcher@>=1.3.6 <2.0.0",
  "_id": "nwmatcher@1.3.6",
  "_inCache": true,
  "_location": "/jest-cli/jsdom/nwmatcher",
  "_phantomChildren": {},
  "_requested": {
    "raw": "nwmatcher@https://registry.npmjs.org/nwmatcher/-/nwmatcher-1.3.6.tgz",
    "scope": null,
    "escapedName": "nwmatcher",
    "name": "nwmatcher",
    "rawSpec": "https://registry.npmjs.org/nwmatcher/-/nwmatcher-1.3.6.tgz",
    "spec": "https://registry.npmjs.org/nwmatcher/-/nwmatcher-1.3.6.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/jest-cli/jsdom"
  ],
  "_resolved": "https://registry.npmjs.org/nwmatcher/-/nwmatcher-1.3.6.tgz",
  "_shasum": "db3bfdb01529af42c6c0162a0a38f6bf3300d3bd",
  "_shrinkwrap": null,
  "_spec": "nwmatcher@https://registry.npmjs.org/nwmatcher/-/nwmatcher-1.3.6.tgz",
  "_where": "/Users/guanliyuan/Library/Caches/CocoaPods/Pods/Release/React/0.13.0-rc-954f9",
  "author": {
    "name": "Diego Perini",
    "email": "diego.perini@gmail.com",
    "url": "http://www.iport.it/"
  },
  "bugs": {
    "url": "http://github.com/dperini/nwmatcher/issues"
  },
  "dependencies": {},
  "description": "A CSS3-compliant JavaScript selector engine.",
  "devDependencies": {},
  "ender": "./lib/ender/bridge.js",
  "homepage": "http://javascript.nwbox.com/NWMatcher/",
  "keywords": [
    "css",
    "matcher",
    "selector",
    "ender"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://javascript.nwbox.com/NWMatcher/MIT-LICENSE"
    }
  ],
  "main": "./src/nwmatcher",
  "maintainers": [
    {
      "name": "Diego Perini",
      "email": "diego.perini@gmail.com",
      "url": "http://www.iport.it/"
    }
  ],
  "name": "nwmatcher",
  "optionalDependencies": {},
  "readme": "# [NWMatcher](http://dperini.github.io/nwmatcher/)\n\nA fast CSS selector engine and matcher.\n\n\n## Installation\n\nTo include NWMatcher in a standard web page:\n\n```html\n<script type=\"text/javascript\" src=\"nwmatcher.js\"></script>\n```\n\nTo use it with Node.js:\n\n```\n$ npm install nwmatcher.js\n```\n\nNWMatcher currently supports browsers (as a global, `NW.Dom`) and headless environments (as a CommonJS module).\n\n\n## Supported Selectors\n\nHere is a list of all the CSS2/CSS3 [Supported selectors](https://github.com/dperini/nwmatcher/wiki/CSS-supported-selectors).\n\n\n## Features and Compliance\n\nYou can read more about NWMatcher [features and compliance](https://github.com/dperini/nwmatcher/wiki/Features-and-compliance) on the wiki.\n\n\n## API\n\n### DOM Selection\n\n#### `first( selector, context )`\n\nReturns a reference to the first element matching `selector`, starting at `context`.\n\n#### `match( element, selector, context )`\n\nReturns `true` if `element` matches `selector`, starting at `context`; returns `false` otherwise.\n\n#### `select( selector, context, callback )`\n\nReturns an array of all the elements matching `selector`, starting at `context`. If `callback` is provided, it is invoked for each matching element.\n\n\n### DOM Helpers\n\n#### `byId( id, from )`\n\nReturns a reference to the first element with ID `id`, optionally filtered to descendants of the element `from`.\n\n#### `byTag( tag, from )`\n\nReturns an array of elements having the specified tag name `tag`, optionally filtered to descendants of the element `from`.\n\n#### `byClass( class, from )`\n\nReturns an array of elements having the specified class name `class`, optionally filtered to descendants of the element `from`.\n\n#### `byName( name, from )`\n\nReturns an array of elements having the specified value `name` for their name attribute, optionally filtered to descendants of the element `from`.\n\n#### `getAttribute( element, attribute )`\n\nReturn the value read from the attribute of `element` with name `attribute`, as a string.\n\n#### `hasAttribute( element, attribute )`\n\nReturns true `element` has an attribute with name `attribute` set; returns `false` otherwise.\n\n\n### Engine Configuration\n\n#### `configure( options )`\n\nThe following options exist and can be set to `true` or `false`:\n\n* `CACHING`: enable caching of results\n* `SHORTCUTS`: allow accepting mangled selectors\n* `SIMPLENOT`: disallow nested complex `:not()` selectors\n* `UNIQUE_ID`: disallow multiple elements with same ID\n* `USE_QSAPI`: enable native `querySelectorAll` if available\n* `USE_HTML5`: enable special HTML5 rules, related to the relationship between `:checked` and `:selected`\n* `VERBOSITY`: choose between throwing errors or just console warnings\n\nExample:\n\n```js\nNW.Dom.configure( { USE_QSAPI: false, VERBOSITY: false } );\n```\n\n#### `registerOperator( symbol, resolver )`\n\nRegisters a new symbol and its matching resolver in the operators table. Example:\n\n```js\nNW.Dom.registerOperator( '!=', 'n!=\"%m\"' );\n```\n\n#### `registerSelector( name, rexp, func )`\n\nRegisters a new selector, with the matching regular expression and the appropriate resolver function, in the selectors table.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/dperini/nwmatcher.git"
  },
  "version": "1.3.6"
}
