{
  "_args": [
    [
      {
        "raw": "jest-cli@https://registry.npmjs.org/jest-cli/-/jest-cli-0.5.7.tgz",
        "scope": null,
        "escapedName": "jest-cli",
        "name": "jest-cli",
        "rawSpec": "https://registry.npmjs.org/jest-cli/-/jest-cli-0.5.7.tgz",
        "spec": "https://registry.npmjs.org/jest-cli/-/jest-cli-0.5.7.tgz",
        "type": "remote"
      },
      "/Users/guanliyuan/Library/Caches/CocoaPods/Pods/Release/React/0.13.0-rc-954f9"
    ]
  ],
  "_from": "jest-cli@0.5.7",
  "_id": "jest-cli@0.5.7",
  "_inCache": true,
  "_location": "/jest-cli",
  "_phantomChildren": {
    "chalk": "1.1.1",
    "optimist": "0.6.1"
  },
  "_requested": {
    "raw": "jest-cli@https://registry.npmjs.org/jest-cli/-/jest-cli-0.5.7.tgz",
    "scope": null,
    "escapedName": "jest-cli",
    "name": "jest-cli",
    "rawSpec": "https://registry.npmjs.org/jest-cli/-/jest-cli-0.5.7.tgz",
    "spec": "https://registry.npmjs.org/jest-cli/-/jest-cli-0.5.7.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/jest-cli/-/jest-cli-0.5.7.tgz",
  "_shasum": "9383c710da4731ee2302ac5d1f61ee2bc19da16a",
  "_shrinkwrap": null,
  "_spec": "jest-cli@https://registry.npmjs.org/jest-cli/-/jest-cli-0.5.7.tgz",
  "_where": "/Users/guanliyuan/Library/Caches/CocoaPods/Pods/Release/React/0.13.0-rc-954f9",
  "bin": {
    "jest": "./bin/jest.js"
  },
  "bugs": {
    "url": "https://github.com/facebook/jest/issues"
  },
  "dependencies": {
    "coffee-script": "^1.10.0",
    "cover": "^0.2.9",
    "diff": "^2.1.1",
    "graceful-fs": "^4.1.2",
    "istanbul": "^0.3.19",
    "jasmine-only": "^0.1.1",
    "jasmine-pit": "^2.0.2",
    "jsdom": "6.5.0",
    "lodash.template": "^3.6.2",
    "node-haste": "^1.2.8",
    "node-worker-pool": "^3.0.2",
    "object-assign": "^4.0.1",
    "optimist": "^0.6.1",
    "resolve": "^1.1.6",
    "sane": "^1.2.0",
    "through": "^2.3.8",
    "which": "^1.1.1"
  },
  "description": "Painless JavaScript Unit Testing.",
  "devDependencies": {
    "jshint": "^2.8.0",
    "node-find-files": "0.0.4"
  },
  "engines": {
    "node": ">= 2"
  },
  "homepage": "http://facebook.github.io/jest/",
  "jest": {
    "rootDir": "src",
    "testPathIgnorePatterns": [
      "/__tests__/[^/]*/.+"
    ]
  },
  "keywords": [
    "facebook",
    "jest",
    "test",
    "unit",
    "jasmine",
    "mock"
  ],
  "license": "BSD-3-Clause",
  "main": "src/jest.js",
  "name": "jest-cli",
  "optionalDependencies": {},
  "readme": "# [Jest](http://facebook.github.io/jest/) [![Build Status](https://travis-ci.org/facebook/jest.svg?branch=master)](https://travis-ci.org/facebook/jest) [![npm version](https://badge.fury.io/js/jest-cli.svg)](http://badge.fury.io/js/jest-cli)\n\n\nPainless JavaScript Unit Testing\n\n- **Familiar Approach**: Built on top of the Jasmine test framework, using familiar expect(value).toBe(other) assertions\n\n- **Mock by Default**: Automatically mocks CommonJS modules returned by require(), making most existing code testable\n\n- **Short Feedback Loop**: DOM APIs are mocked and tests run in parallel via a small node.js command line utility\n\n## Getting Started\n\nCheck out the [Getting Started](http://facebook.github.io/jest/docs/getting-started.html) tutorial. It's pretty simple!\n\n## API\n\n<generated_api_start />\n#### The `jest` object\n\n  - [`jest.autoMockOff()`](http://facebook.github.io/jest/docs/api.html#jest-automockoff)\n  - [`jest.autoMockOn()`](http://facebook.github.io/jest/docs/api.html#jest-automockon)\n  - [`jest.clearAllTimers()`](http://facebook.github.io/jest/docs/api.html#jest-clearalltimers)\n  - [`jest.dontMock(moduleName)`](http://facebook.github.io/jest/docs/api.html#jest-dontmock-modulename)\n  - [`jest.genMockFromModule(moduleName)`](http://facebook.github.io/jest/docs/api.html#jest-genmockfrommodule-modulename)\n  - [`jest.genMockFunction()`](http://facebook.github.io/jest/docs/api.html#jest-genmockfunction)\n  - [`jest.genMockFn()`](http://facebook.github.io/jest/docs/api.html#jest-genmockfn)\n  - [`jest.mock(moduleName)`](http://facebook.github.io/jest/docs/api.html#jest-mock-modulename)\n  - [`jest.runAllTicks()`](http://facebook.github.io/jest/docs/api.html#jest-runallticks)\n  - [`jest.runAllTimers()`](http://facebook.github.io/jest/docs/api.html#jest-runalltimers)\n  - [`jest.runOnlyPendingTimers()`](http://facebook.github.io/jest/docs/api.html#jest-runonlypendingtimers)\n  - [`jest.setMock(moduleName, moduleExports)`](http://facebook.github.io/jest/docs/api.html#jest-setmock-modulename-moduleexports)\n\n#### Mock functions\n\n  - [`mockFn.mock.calls`](http://facebook.github.io/jest/docs/api.html#mockfn-mock-calls)\n  - [`mockFn.mock.instances`](http://facebook.github.io/jest/docs/api.html#mockfn-mock-instances)\n  - [`mockFn.mockClear()`](http://facebook.github.io/jest/docs/api.html#mockfn-mockclear)\n  - [`mockFn.mockImplementation(fn)`](http://facebook.github.io/jest/docs/api.html#mockfn-mockimplementation-fn)\n  - [`mockFn.mockImpl(fn)`](http://facebook.github.io/jest/docs/api.html#mockfn-mockimpl-fn)\n  - [`mockFn.mockReturnThis()`](http://facebook.github.io/jest/docs/api.html#mockfn-mockreturnthis)\n  - [`mockFn.mockReturnValue(value)`](http://facebook.github.io/jest/docs/api.html#mockfn-mockreturnvalue-value)\n  - [`mockFn.mockReturnValueOnce(value)`](http://facebook.github.io/jest/docs/api.html#mockfn-mockreturnvalueonce-value)\n\n#### Config options\n\n  - [`config.bail` [boolean]](http://facebook.github.io/jest/docs/api.html#config-bail-boolean)\n  - [`config.cacheDirectory` [string]](http://facebook.github.io/jest/docs/api.html#config-cachedirectory-string)\n  - [`config.collectCoverage` [boolean]](http://facebook.github.io/jest/docs/api.html#config-collectcoverage-boolean)\n  - [`config.collectCoverageOnlyFrom` [object]](http://facebook.github.io/jest/docs/api.html#config-collectcoverageonlyfrom-object)\n  - [`config.globals` [object]](http://facebook.github.io/jest/docs/api.html#config-globals-object)\n  - [`config.moduleFileExtensions` [array<string>]](http://facebook.github.io/jest/docs/api.html#config-modulefileextensions-array-string)\n  - [`config.modulePathIgnorePatterns` [array<string>]](http://facebook.github.io/jest/docs/api.html#config-modulepathignorepatterns-array-string)\n  - [`config.preprocessCachingDisabled` [boolean]](http://facebook.github.io/jest/docs/api.html#config-preprocesscachingdisabled-boolean)\n  - [`config.rootDir` [string]](http://facebook.github.io/jest/docs/api.html#config-rootdir-string)\n  - [`config.scriptPreprocessor` [string]](http://facebook.github.io/jest/docs/api.html#config-scriptpreprocessor-string)\n  - [`config.setupEnvScriptFile` [string]](http://facebook.github.io/jest/docs/api.html#config-setupenvscriptfile-string)\n  - [`config.setupTestFrameworkScriptFile` [string]](http://facebook.github.io/jest/docs/api.html#config-setuptestframeworkscriptfile-string)\n  - [`config.testDirectoryName` [string]](http://facebook.github.io/jest/docs/api.html#config-testdirectoryname-string)\n  - [`config.testFileExtensions` [array<string>]](http://facebook.github.io/jest/docs/api.html#config-testfileextensions-array-string)\n  - [`config.testPathDirs` [array<string>]](http://facebook.github.io/jest/docs/api.html#config-testpathdirs-array-string)\n  - [`config.testPathIgnorePatterns` [array<string>]](http://facebook.github.io/jest/docs/api.html#config-testpathignorepatterns-array-string)\n  - [`config.testPathPattern` [string]](http://facebook.github.io/jest/docs/api.html#config-testpathpattern-string)\n  - [`config.unmockedModulePathPatterns` [array<string>]](http://facebook.github.io/jest/docs/api.html#config-unmockedmodulepathpatterns-array-string)\n  - [`config.verbose` [boolean]](http://facebook.github.io/jest/docs/api.html#config-verbose-boolean)\n\n#### Globally injected variables\n\n  - `afterEach(fn)`\n  - `beforeEach(fn)`\n  - `describe(name, fn)`\n  - [`expect(value)`](http://facebook.github.io/jest/docs/api.html#expect-value)\n  - `it(name, fn)`\n  - `it.only(name, fn)` executes [only](https://github.com/davemo/jasmine-only) this test. Useful when investigating a failure\n  - [`jest`](http://facebook.github.io/jest/docs/api.html#the-jest-object)\n  - `pit(name, fn)` [helper](https://www.npmjs.org/package/jasmine-pit) for promises\n  - `require(module)`\n  - `require.requireActual(module)`\n  - `xdescribe(name, fn)`\n  - `xit(name, fn)`\n\n#### `expect(value)`\n\n  - `.not` inverse the next comparison\n  - `.toThrow(?message)`\n  - `.toBe(value)` comparison using `===`\n  - `.toEqual(value)` deep comparison. Use [`jasmine.any(type)`](http://jasmine.github.io/1.3/introduction.html#section-Matching_Anything_with_<code>jasmine.any</code>) to be softer\n  - `.toBeFalsy()`\n  - `.toBeTruthy()`\n  - `.toBeNull()`\n  - `.toBeUndefined()`\n  - `.toBeDefined()`\n  - `.toMatch(regexp)`\n  - `.toContain(string)`\n  - `.toBeCloseTo(number, delta)`\n  - `.toBeGreaterThan(number)`\n  - `.toBeLessThan(number)`\n  - `.toBeCalled()`\n  - `.toBeCalledWith(arg, um, ents)`\n  - `.lastCalledWith(arg, um, ents)`\n\n<generated_api_end />\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/facebook/jest.git"
  },
  "scripts": {
    "prepublish": "jshint --config=.jshintrc --exclude=src/coverageTemplate.js src && node bin/jest.js",
    "test": "jshint --config=.jshintrc --exclude=src/coverageTemplate.js src && node bin/jest.js"
  },
  "version": "0.5.7"
}
